geom_tile(aes(x = x, y = y), fill = 'black') +
coord_sf(expand = F) +
# ggtitle(label = paste0('For climate zone:\n ', case_list[[caseID]]$case_longname)) +
ggtitle(label = 'For climate zone:', subtitle = case_list[[caseID]]$case_longname) +
theme(plot.title = element_text(hjust = 0.5, size = 10),
plot.subtitle = element_text(hjust = 0.5, size = 8),
panel.grid = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.border = element_rect(colour = gry2, fill = NA))
g_map
gry_meer_light <- 'grey90'
source("~/work/workspace/f4p-era5-analysis/code/making_figures_for_paper/plot_bias_against_temp_anomalies.R")
load('data/final_data/figures_for_paper/df_LSTLAI_tempAnomalyQuantile_aug.RData')
load('data/final_data/figures_for_paper/hw_gislayers.RData')
load('data/inter_data/ancillary_info/df_KG_climatezones.RData') # df_lgd & df_cz   # <---- should probably be in "final_data"
# set-up climate zones to show
v_cz_in <- c('Dfc', 'Dfb', 'Cfb', 'Csa')
# set-up geographical boundaries
v_lon_min <- -12
v_lon_max <- 58
v_lat_min <- 36
v_lat_max <- 71
# prepare dataset for maps
df_cz_sub <- df_cz %>%
filter(x >= v_lon_min & x <= v_lon_max) %>%
filter(y >= v_lat_min & y <= v_lat_max) %>%
filter(cz_name %in% v_cz_in) %>%
mutate(cz_name = factor(cz_name, levels = v_cz_in)) %>%
tibble()
# prepare quantiles
df_qtls <- df_all %>%
filter(cz_name %in% v_cz_in) %>%
mutate(cz_name = factor(cz_name, levels = v_cz_in)) %>%
mutate(bias_rescaled = ifelse(y_var == 'LAI', bias, bias/10)) %>% # <----  Rescaling LST to deciKelvin
tibble()
# set-up gray colours for maps
if(exists('gry_land') != T){ gry_land <- 'grey50'}
if(exists('gry_meer') != T){ gry_meer <- 'grey30'}
gry_meer_light <- 'grey90'
# Set-up some colour parameters
gry1 <- 'grey60'  # <-- the axes
gry2 <- 'grey20'  # <-- the borders of the shapes/circles
# Colours for the legend
cz_cols <- df_lgd$cz_colours
names(cz_cols) <- df_lgd$cz_name
# get the labels of facets a bit more sophisticated
var_labeller = labeller(y_var = c('LAI' = 'Bias in LAI [m2/m2]', 'LST' = 'Bias in LST [K]'))
# plot for the maps
g_maps <- ggplot(df_cz_sub) +
geom_sf(data = land_europe, fill = gry_land, colour = gry_land, size = 0) +
geom_tile(aes(x = x, y = y, fill = cz_name)) +
geom_sf(data = ocean_europe, fill = gry_meer_light, colour = gry_meer_light, size = 0) +
facet_grid(.~cz_name) +
coord_sf(ylim = c(v_lat_min, v_lat_max)) +
scale_fill_manual('Koppen-Geiger climate zones', values = cz_cols) +
scale_y_continuous('', expand = c(0, 0)) +
scale_x_continuous('', expand = c(0, 0)) +
theme(legend.position = 'none') +
ggtitle('How the biases change for different thermal anomalies',
subtitle = "Detailed for selected Koppen-Geiger climate zones across Europe")
# plot for the quantiles
g_plot_quantile <- ggplot(df_qtls) +
geom_hline(yintercept = 0, colour = gry1) +
geom_vline(xintercept = 0, colour = gry1) +
geom_line(aes(x = LST_anomaly_value, y = bias, colour = y_var),
size = 1, show.legend = F) +
geom_point(aes(x = LST_anomaly_value, y = bias, colour = y_var,
fill = LST_anomaly_quantile),
size = 3, shape = 21, show.legend = F) +
facet_grid(y_var~cz_name,  scales = 'free_y', labeller = var_labeller) +
scale_y_continuous( 'Bias (ERA - obs)' ) + # , limits = y_scale
scale_x_continuous( 'Land surface temperature anomaly [K]' ) + # , limits = x_scale
scale_colour_manual('', values = c('LAI' = gry2, 'LST' = gry2)) + # , limits = x_scale
scale_fill_gradientn('Quantile', colours = rev(RColorBrewer::brewer.pal(10, 'RdBu'))) + # , limits = y_scale
theme(legend.position = 'bottom')
# assemble the panels...
g_all <- g_maps + g_plot_quantile + plot_layout(nrow = 2, heights = c(1, 2)) # , heights = c(1, 4), widths = c(1,1)
# plotting details, in case not inherited...
if(exists('fig.path') != T){ fig.path <- 'paper/figures/'}
if(exists('fig.fmt') != T){ fig.fmt <- 'png'}
g_all
# plotting details, in case not inherited...
if(exists('fig.path') != T){ fig.path <- 'paper/figures/'}
if(exists('fig.fmt') != T){ fig.fmt <- 'png'}
dir.create(path = fig.path, recursive = T, showWarnings = F)
fig.name <- 'bias_vs_anomaly'
ggsave(filename = paste0(fig.name, '.', fig.fmt), plot = g_all,
path = fig.path, width = 10, height = 8)
fig.path
fig.path
fig.path <- 'figs/'
source("~/work/workspace/f4p-era5-analysis/code/making_figures_for_paper/plot_bias_against_temp_anomalies.R")
df_cz
load('data/final_data/figures_for_paper/df_LSTLAI_tempAnomalyQuantile_aug.RData')
(load('data/final_data/figures_for_paper/df_LSTLAI_tempAnomalyQuantile_aug.RData'))
head(df_all)
g_all
# plot for the maps
g_maps <- ggplot(df_cz_sub) +
geom_sf(data = land_europe, fill = gry_land, colour = gry_land, size = 0) +
geom_tile(aes(x = x, y = y, fill = cz_name)) +
geom_sf(data = ocean_europe, fill = gry_meer_light, colour = gry_meer_light, size = 0) +
facet_grid(.~cz_name) +
coord_sf(ylim = c(v_lat_min, v_lat_max)) +
scale_fill_manual('Koppen-Geiger climate zones', values = cz_cols) +
scale_y_continuous('', expand = c(0, 0)) +
scale_x_continuous('', expand = c(0, 0)) +
theme(legend.position = 'none') +
ggtitle('How the biases change for different thermal anomalies for the month of August',
subtitle = "Detailed for selected Koppen-Geiger climate zones across Europe")
# plot for the quantiles
g_plot_quantile <- ggplot(df_qtls) +
geom_hline(yintercept = 0, colour = gry1) +
geom_vline(xintercept = 0, colour = gry1) +
geom_line(aes(x = LST_anomaly_value, y = bias, colour = y_var),
size = 1, show.legend = F) +
geom_point(aes(x = LST_anomaly_value, y = bias, colour = y_var,
fill = LST_anomaly_quantile),
size = 3, shape = 21, show.legend = F) +
facet_grid(y_var~cz_name,  scales = 'free_y', labeller = var_labeller) +
scale_y_continuous( 'Bias (ERA - obs)' ) + # , limits = y_scale
scale_x_continuous( 'Land surface temperature anomaly [K]' ) + # , limits = x_scale
scale_colour_manual('', values = c('LAI' = gry2, 'LST' = gry2)) + # , limits = x_scale
scale_fill_gradientn('Quantile', colours = rev(RColorBrewer::brewer.pal(10, 'RdBu'))) + # , limits = y_scale
theme(legend.position = 'bottom')
# assemble the panels...
g_all <- g_maps + g_plot_quantile + plot_layout(nrow = 2, heights = c(1, 2)) # , heights = c(1, 4), widths = c(1,1)
# plotting details, in case not inherited...
if(exists('fig.path') != T){ fig.path <- 'paper/figures/'}
if(exists('fig.fmt') != T){ fig.fmt <- 'png'}
dir.create(path = fig.path, recursive = T, showWarnings = F)
fig.name <- 'bias_vs_anomaly'
ggsave(filename = paste0(fig.name, '.', fig.fmt), plot = g_all,
path = fig.path, width = 10, height = 8)
require(ggplot2)
require(scales)
require(viridis)
require(tidyr)
require(dplyr)
require(RColorBrewer)
require(patchwork)
load('data/final_data/figures_for_paper/data_for_corr_summary_maps.RData')
land_shapefile <- "data/input_data/world_vectors/ne_50m_land.shp"
land <- sf::st_read(land_shapefile, quiet = TRUE)
# set-up gray colours for maps
if(exists('gry_land') != T){ gry_land <- 'grey50'}
if(exists('gry_meer') != T){ gry_meer <- 'grey30'}
# some background details
bck_details <- theme(legend.key.height = unit(1.5, 'cm'),
panel.background = element_rect(fill = gry_meer),
panel.grid = element_blank())
season_labeller <- labeller(monthS = c('1' = 'Winter', '7' = 'Summer'))
# Corr maps...
corr_colpal <- c("#A50026", "#D73027", "#F46D43", "#FDAE61", "#FEE090", "#F7F7F7", "#E0F3F8", "#ABD9E9", "#74ADD1", "#4575B4", "#313695")
gmaps <- ggplot(df_LSTb_LAIb_corr) +
geom_sf(data = land, fill = gry_land, colour = NA) +
geom_tile(aes(x = x, y = y, fill = r)) +
scale_fill_gradientn('Correlation',
colours = corr_colpal, na.value = gry_land,
limits = c(-1,1), oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
facet_grid(monthS~., labeller = season_labeller) +
coord_sf(expand = F) +
theme(legend.position = "right") + bck_details
gmaps
df_LSTb_LAIb_corr
df_LSTb_LAIb_corr
cor(x = randu(10), y = randu(10))
rand(10)
randu(10)
cor(x = rnorm(10), y = rnorm(10))
cor(x = rnorm(10), y = rnorm(10))
cor.test(x = rnorm(10), y = rnorm(10))
cor.test(x = rnorm(10), y = rnorm(10))$r
cor.test(x = rnorm(10), y = rnorm(10)) -> fit
fit
fit$statistic
fit$p.value
fit$p.value
fit$estimate
cor(x = rnorm(10), y = rnorm(10))
cor(x = rnorm(10), y = rnorm(10))
x <- rnorm(100)
y <- rnorm(100)
cor(x,y)
fit <- cor.test(x,y)
fit$statistic
fit$method
fit$estimate
fit$estimate$cor
fit$estimate
fit$estimate['cor']
fit$estimate['co']
fit$estimate['cor']
fit$estimate
fit$p.value
library(dplyr)
library(tidyr)
library(here)
install.library("here")
install.package("here")
install.package("here")
install.packages("here")
library(tidyr)
library(here)
# Flag to remove polar areas and sea ice (useful for albedo with MODIS)
rm_polar_and_sea <- T
varname <- 'LST' ## varname_list <- c( 'LAI', 'LST', 'E',  'albedo_wsa_vis')
v_monthS <- c(1,7) # months of interest
input_dir <- 'data/inter_data/df_comb_obs_vs_sim/'
output_path <- 'data/final_data/figures_for_paper/'
dir.create(path = output_path, recursive = T, showWarnings = F) # MP
# load clim zones - x,y, KG climatezone data
load('data/inter_data/ancillary_info/df_KG_climatezones.RData')  # <---- df_cz
output_path
df_cz <- df_cz %>% mutate(cz_major_zone = substr(cz_name, 1, 1)) %>%
select(-cz_ID, -cz_colours)
load(paste0(input_dir, 'df_comb___LAI.RData'))  # <--- df_comb
df_comb <- df_comb %>% filter(!is.na(obs))
df_comb <- df_comb %>% filter(!is.na(obs))  %>%
mutate(monthS = ifelse(sign(y) < 0, (month + 6) %% 12, month))  %>%
mutate(monthS = ifelse(monthS == 0, 12, monthS))  %>%
left_join(df_cz, by = c('x', 'y'))
# remove polar and ice CZ
if(rm_polar_and_sea == T){ df_comb <- df_comb %>% filter(cz_major_zone %in% LETTERS[1:4]) }
# select only certain months to consider
df_comb <- df_comb %>% filter(monthS %in% v_monthS )
df_comb <- df_comb %>%
mutate( bias = sim - obs)
######   get temp agreement (in space) - monthS  #####
df_LAI_bias <- df_comb %>%
group_by(y, x, monthS) %>%
summarise(  diff_simSobs = mean(bias, na.rm = T))
df_comb_LAI <- df_comb
rm(df_comb)
load(paste0(input_dir, 'df_comb___', varname,'.RData'))  # <--- df_comb
df_comb <- df_comb %>% filter(!is.na(obs))  %>%
mutate(monthS = ifelse(sign(y) < 0, (month + 6) %% 12, month))  %>%
mutate(monthS = ifelse(monthS == 0, 12, monthS))  %>%
left_join(df_cz, by = c('x', 'y'))
# remove polar and ice CZ
if(rm_polar_and_sea == T){ df_comb <- df_comb %>% filter(cz_major_zone %in% LETTERS[1:4]) }
# select only certain months to consider
df_comb <- df_comb %>% filter(monthS %in% v_monthS )
df_comb <- df_comb %>%
mutate( bias = sim - obs )
######   get temp agreement (in space) - monthS  #####
df_LST_bias <- df_comb %>%
group_by(y, x, monthS) %>%
summarise( diff_simSobs = mean(bias, na.rm = T) )
save('df_LST_bias', 'df_LAI_bias',
file = paste0(output_path, 'data_for_bias_summary_maps.RData'))
df_comb_LST <- df_comb
# reduce dataframe columns
df_comb_LAI <- df_comb_LAI[,c(1,2,3,7,8,9,10)]
df_comb_LST <- df_comb_LST[,c(1,2,3,7,8,9,10)]
names(df_comb_LAI)[names(df_comb_LAI) == 'bias'] <- 'bias.LAI'
df_comb_cor <- inner_join(df_comb_LAI, df_comb_LST, by = c('x','y','monthS', 'year', 'cz_name', 'cz_major_zone') )
df_comb_cor <- df_comb_cor %>% filter(year >= 2003 & year <= 2018)
df_LSTb_LAIb_corr <- df_comb_cor %>%
group_by(y, x, monthS) %>%
summarise(r = cor(bias, bias.LAI), p = cor.test(bias, bias.LAI)$p.value
)
df_comb_cor
df_LSTb_LAIb_corr <- df_comb_cor %>%
group_by(y, x, monthS) %>%
summarise(r = cor(bias, bias.LAI), p = cor.test(bias, bias.LAI)
)
cor.test(bias, bias.LAI)
cor.test(x,y)
cor.test(x,y)$p-value
cor.test(x,y)$pvalue
fit$p.value
cor.test(x,y)$p.value
df_LSTb_LAIb_corr <- df_comb_cor %>%
group_by(y, x, monthS) %>%
summarise(r = cor(bias, bias.LAI), p = cor.test(bias, bias.LAI)$p.value
)
df_LSTb_LAIb_corr
df_comb_cor
df_comb_cor %>% filter(x= 118.125, y = 72.375 )
df_comb_cor %>% filter(x== 118.125, y == 72.375 )
df_comb_cor %>% filter(x== 118.125, y == 72.375, monthS = 1)
df_comb_cor %>% filter(x== 118.125, y == 72.375, monthS == 1)
df_comb_cor %>% filter(x== 118.125, y == 72.375, monthS == 1) %>% summarise(cor.test(bias, bias.LAI)$p.value)
df_comb_cor %>% filter(x== 118.125, y == 72.375, monthS == 1) %>% summarise(p = cor.test(bias, bias.LAI)$p.value)
df_comb_cor %>% filter(x== 118.125, y == 72.375, monthS == 1) %>% summarise(r = cor(bias, bias.LAI), p = cor.test(bias, bias.LAI)$p.value)
df_LSTb_LAIb_corr <- df_comb_cor %>%
group_by(y, x, monthS) %>%
summarise(r = cor(bias, bias.LAI), p = cor.test(bias, bias.LAI)$p.value
)
df_comb_cor %>% filter(x== 173.875, y == -41.125, monthS == 1) %>% summarise(p = cor.test(bias, bias.LAI)$p.value)
df_comb_cor %>% filter(x== 173.875, y == -41.125, monthS == 1)
df_comb_cor %>% filter(x== 173.875, y == -41.125, monthS == 1) %>% count()
df_LSTb_LAIb_corr <- df_comb_cor %>%
group_by(y, x, monthS) %>%
summarise(n = count(),
r = cor(bias, bias.LAI),
p = ifelse(n > 10, cor.test(bias, bias.LAI)$p.value, NA)
)
.
df_LSTb_LAIb_corr <- df_comb_cor %>%
group_by(y, x, monthS) %>%
summarise(n = length(),
r = cor(bias, bias.LAI),
p = ifelse(n > 10, cor.test(bias, bias.LAI)$p.value, NA)
)
df_comb_cor %>% filter(x== -69.375, y == -53.875, monthS == 1) %>% count()
df_comb_cor %>% filter(x== -69.375, y == -53.875, monthS == 1) %>% length()
df_comb_cor %>% filter(x== -69.375, y == -53.875, monthS == 1)
df_comb_cor %>% filter(x== -69.375, y == -53.875, monthS == 1) %>% dim()
df_comb_cor %>% filter(x== -69.375, y == -53.875, monthS == 1) %>% dim(1)
df_comb_cor %>% filter(x== -69.375, y == -53.875, monthS == 1) %>% dim()
df_comb_cor %>% filter(x== -69.375, y == -53.875, monthS == 1) %>% dim()[1]
df_comb_cor %>% filter(x== -69.375, y == -53.875, monthS == 1) %>% dim()
df_comb_cor %>% filter(x== -69.375, y == -53.875, monthS == 1) %>% dim(1,0)
df_comb_cor %>% filter(x== -69.375, y == -53.875, monthS == 1) %>% dim()
df_comb_cor %>% filter(x== -69.375, y == -53.875, monthS == 1) %>% dim()[1]
df_comb_cor %>% filter(x== -69.375, y == -53.875, monthS == 1) %>% dim()[[1]]
df_comb_cor %>% filter(x== -69.375, y == -53.875, monthS == 1) %>% nrow()
df_LSTb_LAIb_corr <- df_comb_cor %>%
group_by(y, x, monthS) %>%
summarise(n = nrow(),
r = cor(bias, bias.LAI),
p = ifelse(n > 10, cor.test(bias, bias.LAI)$p.value, NA)
)
df_LSTb_LAIb_corr <- df_comb_cor %>%
group_by(y, x, monthS) %>%
summarise(n = count(),
r = cor(bias, bias.LAI),
p = ifelse(n > 10, cor.test(bias, bias.LAI)$p.value, NA)
)
df_comb_cor %>% filter(x== -69.375, y == -53.875, monthS == 1)
df_comb_cor %>% filter(x== -69.375, y == -53.875, monthS == 1) %>% count()
?count
df_LSTb_LAIb_corr
df_LSTb_LAIb_corr <- df_comb_cor %>%
group_by(y, x, monthS) %>%
summarise(n = count(),
r = cor(bias, bias.LAI),
p = ifelse(n > 10, cor.test(bias, bias.LAI)$p.value, NA)
)
df_comb_cor %>% filter(x == -69.375, y == -53.875, monthS == 1) %>% count()
df_comb_cor %>% filter(x == -69.375, y == -53.875, monthS == 1) %>% count()
df_comb_cor %>% filter(x == -69.375, y == -53.875, monthS == 1)
df_LSTb_LAIb_corr <- df_comb_cor %>%
group_by(y, x, monthS) %>%
summarise(n = nrow(),
r = cor(bias, bias.LAI),
p = ifelse(n > 10, cor.test(bias, bias.LAI)$p.value, NA)
)
df_LSTb_LAIb_corr <- df_comb_cor %>%
group_by(y, x, monthS) %>%
summarise(n = nrow(year),
r = cor(bias, bias.LAI),
p = ifelse(n > 10, cor.test(bias, bias.LAI)$p.value, NA)
)
df_comb_cor %>% filter(x == -69.375, y == -53.875, monthS == 1) -> dat
dat
nrow(dat$year)
length(dat$year)
df_LSTb_LAIb_corr <- df_comb_cor %>%
group_by(y, x, monthS) %>%
summarise(n = length(year),
r = cor(bias, bias.LAI),
p = ifelse(n > 10, cor.test(bias, bias.LAI)$p.value, NA)
)
df_LSTb_LAIb_corr
hist(df_LSTb_LAIb_corr$n)
count(df_LSTb_LAIb_corr$n)
tally(df_LSTb_LAIb_corr$n)
unique(df_LSTb_LAIb_corr$n)
save('df_LSTb_LAIb_corr',
file = paste0(output_path, 'data_for_corr_summary_maps.RData'))
load('data/final_data/figures_for_paper/data_for_corr_summary_maps.RData')
land_shapefile <- "data/input_data/world_vectors/ne_50m_land.shp"
land <- sf::st_read(land_shapefile, quiet = TRUE)
# set-up gray colours for maps
if(exists('gry_land') != T){ gry_land <- 'grey50'}
if(exists('gry_meer') != T){ gry_meer <- 'grey30'}
# some background details
bck_details <- theme(legend.key.height = unit(1.5, 'cm'),
panel.background = element_rect(fill = gry_meer),
panel.grid = element_blank())
season_labeller <- labeller(monthS = c('1' = 'Winter', '7' = 'Summer'))
# Corr maps...
corr_colpal <- c("#A50026", "#D73027", "#F46D43", "#FDAE61", "#FEE090", "#F7F7F7", "#E0F3F8", "#ABD9E9", "#74ADD1", "#4575B4", "#313695")
gmaps <- ggplot(df_LSTb_LAIb_corr) +
geom_sf(data = land, fill = gry_land, colour = NA) +
geom_tile(aes(x = x, y = y, fill = r)) +
scale_fill_gradientn('Correlation',
colours = corr_colpal, na.value = gry_land,
limits = c(-1,1), oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
facet_grid(monthS~., labeller = season_labeller) +
coord_sf(expand = F) +
theme(legend.position = "right") + bck_details
df_LSTb_LAIb_corr
gmaps <- ggplot(df_LSTb_LAIb_corr) +
geom_sf(data = land, fill = gry_land, colour = NA) +
geom_tile(aes(x = x, y = y, fill = r)) +
scale_fill_gradientn('Correlation',
colours = corr_colpal, na.value = gry_land,
limits = c(-1,1), oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
facet_grid(monthS~., labeller = season_labeller) +
coord_sf(expand = F) +
theme(legend.position = "right") + bck_details
gmaps
gmaps <- ggplot(df_LSTb_LAIb_corr %>% filter(p < 0.05)) +
geom_sf(data = land, fill = gry_land, colour = NA) +
geom_tile(aes(x = x, y = y, fill = r)) +
scale_fill_gradientn('Correlation',
colours = corr_colpal, na.value = gry_land,
limits = c(-1,1), oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
facet_grid(monthS~., labeller = season_labeller) +
coord_sf(expand = F) +
theme(legend.position = "right") + bck_details
gmaps
gmaps <- ggplot(df_LSTb_LAIb_corr %>% filter(p < 0.1)) +
geom_sf(data = land, fill = gry_land, colour = NA) +
geom_tile(aes(x = x, y = y, fill = r)) +
scale_fill_gradientn('Correlation',
colours = corr_colpal, na.value = gry_land,
limits = c(-1,1), oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
facet_grid(monthS~., labeller = season_labeller) +
coord_sf(expand = F) +
theme(legend.position = "right") + bck_details
gmaps
source("~/work/workspace/f4p-era5-analysis/code/making_figures_for_paper/plot_interannual_correlation.R")
source("~/work/workspace/f4p-era5-analysis/code/making_figures_for_paper/plot_interannual_correlation.R")
source("~/work/workspace/f4p-era5-analysis/code/making_figures_for_paper/plot_interannual_correlation.R")
source("~/work/workspace/f4p-era5-analysis/code/making_figures_for_paper/plot_interannual_correlation.R")
source("~/work/workspace/f4p-era5-analysis/code/making_figures_for_paper/plot_interannual_correlation.R")
source("~/work/workspace/f4p-era5-analysis/code/making_figures_for_paper/plot_interannual_correlation.R")
source("~/work/workspace/f4p-era5-analysis/code/making_figures_for_paper/plot_interannual_correlation.R")
gry_land
source("~/work/workspace/f4p-era5-analysis/code/making_figures_for_paper/plot_interannual_correlation.R")
source("~/work/workspace/f4p-era5-analysis/code/making_figures_for_paper/plot_interannual_correlation.R")
source("~/work/workspace/f4p-era5-analysis/code/making_figures_for_paper/plot_interannual_correlation.R")
source("~/work/workspace/f4p-era5-analysis/code/making_figures_for_paper/plot_interannual_correlation.R")
source("~/work/workspace/f4p-era5-analysis/code/making_figures_for_paper/plot_bias_summaries.R")
source("~/work/workspace/f4p-era5-analysis/code/making_figures_for_paper/plot_bias_summaries.R")
source("~/work/workspace/f4p-era5-analysis/code/making_figures_for_paper/plot_bias_summaries.R")
source("~/work/workspace/f4p-era5-analysis/code/making_figures_for_paper/plot_bias_summaries.R")
source("~/work/workspace/f4p-era5-analysis/code/making_figures_for_paper/plot_interannual_correlation.R")
rm(list = ls())
source("~/work/workspace/f4p-era5-analysis/code/making_figures_for_paper/master_script_make_all_figures.R")
df_LSTb_LAIb_corr
f_LSTb_LAIb_corr %>% filter(p < 0.05)
df_LSTb_LAIb_corr %>% filter(p < 0.05)
df_LSTb_LAIb_corr %>% filter(p < 0.05) -> ddd
hist(ddd$n)
range(ddd$n)
df_LSTb_LAIb_corr %>% filter(p > 0.05) -> ddd
range(ddd$n)
gmaps <- ggplot(df_LSTb_LAIb_corr %>% filter(p > 0.05)) +
geom_sf(data = land, fill = gry_land, colour = NA) +
geom_tile(aes(x = x, y = y, fill = r)) +
scale_fill_gradientn('Correlation',
colours = corr_colpal, na.value = gry_land,
limits = c(-1,1), oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
facet_grid(monthS~., labeller = season_labeller) +
coord_sf(expand = F) +
theme(legend.position = "bottom") + bck_details + lgd_guides
gmaps
gmaps <- ggplot(df_LSTb_LAIb_corr %>% filter(p < 0.01)) +
geom_sf(data = land, fill = gry_land, colour = NA) +
geom_tile(aes(x = x, y = y, fill = r)) +
scale_fill_gradientn('Correlation',
colours = corr_colpal, na.value = gry_land,
limits = c(-1,1), oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
facet_grid(monthS~., labeller = season_labeller) +
coord_sf(expand = F) +
theme(legend.position = "bottom") + bck_details + lgd_guides
gmaps
gmaps <- ggplot(df_LSTb_LAIb_corr %>% filter(p < 0.1)) +
geom_sf(data = land, fill = gry_land, colour = NA) +
geom_tile(aes(x = x, y = y, fill = r)) +
scale_fill_gradientn('Correlation',
colours = corr_colpal, na.value = gry_land,
limits = c(-1,1), oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
facet_grid(monthS~., labeller = season_labeller) +
coord_sf(expand = F) +
theme(legend.position = "bottom") + bck_details + lgd_guides
gmaps
gmaps <- ggplot(df_LSTb_LAIb_corr %>% filter(p < 0.05)) +
geom_sf(data = land, fill = gry_land, colour = NA) +
geom_tile(aes(x = x, y = y, fill = r)) +
scale_fill_gradientn('Correlation',
colours = corr_colpal, na.value = gry_land,
limits = c(-1,1), oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
facet_grid(monthS~., labeller = season_labeller) +
coord_sf(expand = F) +
theme(legend.position = "bottom") + bck_details + lgd_guides

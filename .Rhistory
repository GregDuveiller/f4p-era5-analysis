limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_cartesian(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle('Temporal agreement represented in space')
g_map <- ggplot(sp_agr_sub, aes(x = x, y = y)) +
geom_tile(aes(fill = agre$bias)) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_cartesian(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle('Temporal agreement represented in space')
g_map
sp_agr_sub <- sp_agr %>% filter(x >= bbox['xmin'], x <= bbox['xmax'],
y >= bbox['ymin'], y <= bbox['ymax'])
g_map <- ggplot(sp_agr_sub, aes(x = x, y = y)) +
geom_tile(aes(fill = agre$bias)) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_cartesian(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle('Temporal agreement represented in space')
g_map
bbox <- c(ymin = -35, ymax = 40, xmin = -18, xmax = 53)
metric_label <- 'bias'
g_map <- ggplot(sp_agr_sub, aes(x = x, y = y)) +
geom_tile(aes(fill = agre$bias)) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_cartesian(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Mean bias Temporal agreement represented in space',
subtitle = 'Period f'          )
g_map
g_map <- ggplot(sp_agr_sub, aes(x = x, y = y)) +
geom_tile(aes(fill = agre$bias)) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_cartesian(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Mean bias in skin/surface temperature of hottest days in the month',
subtitle = 'Period from 2003 until 2019. Bias consists of reanalysis (ERA5) minus satellite retrievals (MYD11)')
g_map
g_map_1 <- ggplot(sp_agr_sub, aes(x = x, y = y)) +
geom_tile(aes(fill = agre$bias)) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_cartesian(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Mean bias in skin/surface temperature of hottest days in the month',
subtitle = 'Based on all monthly values covering 2003 until 2019. Bias consists of reanalysis (ERA5) minus satellite retrievals (MYD11)')
g_map_1
dpath <- '../lulcc-bph-chgclim/data/inter_data/df_s4t'
dfile <- paste0(dpath, '/df_s4t_LST_Day_CMG_CaGtoDFO_2003to2019_May.RData')
load(dfile, verbose = T)
head(df_s4t_month)
sp_agr_sub <- df_s4t_month %>%
filter(x >= bbox['xmin'], x <= bbox['xmax'],
y >= bbox['ymin'], y <= bbox['ymax'])
sp_agr_sub <- df_s4t_month %>%
filter(lon >= bbox['xmin'], lon <= bbox['xmax'],
lat >= bbox['ymin'], lat <= bbox['ymax'])
head(sp_agr_sub)
g_map_2 <- ggplot(sp_agr_sub, aes(x = lon, y = lat)) +
geom_tile(aes(fill = dT.lcc)) +
scale_fill_gradientn('D_LST', colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_cartesian(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Mean bias in skin/surface temperature of hottest days in the month',
subtitle = 'Based on all monthly values covering 2003 until 2019. Bias consists of reanalysis (ERA5) minus satellite retrievals (MYD11)')
g_map_2
head(df_s4t_month)
dim(df_s4t_month)
dim(sp_agr_sub)
metric_lims_s
metric_lims_s <- c(-1,1) * max(abs(quantile(df_s4t_month$dT.lcc, probs = c(0.025, 0.975), na.rm = T)))  # <--- need to adjust!
metric_colpal <- rev(c("#081a2b", "#14406b", "#2166AC", "#92C5DE", "#F7F7F7", "#F4A582", "#B2182B", "#700f1b", "#2d060b"))  # RColorBrewer::brewer.pal(n = 9, name = 'RdBu')
metric_lims_s <- c(-1,1) * max(abs(quantile(df_s4t_month$dT.lcc, probs = c(0.025, 0.975), na.rm = T)))  # <--- need to adjust!
metric_label <- 'D_LST'
sp_agr_sub <- df_s4t_month %>%
filter(lon >= bbox['xmin'], lon <= bbox['xmax'],
lat >= bbox['ymin'], lat <= bbox['ymax'])
g_map_2 <- ggplot(sp_agr_sub, aes(x = lon, y = lat)) +
geom_tile(aes(fill = dT.lcc)) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_cartesian(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Mean bias in skin/surface temperature of hottest days in the month',
subtitle = 'Based on all monthly values covering 2003 until 2019. Bias consists of reanalysis (ERA5) minus satellite retrievals (MYD11)')
g_map_2
dfile <- paste0(dpath, '/df_s4t_LST_Day_CMG_CaGtoEFO_2003to2019_May.RData')
load(dfile, verbose = T)
metric_colpal <- rev(c("#081a2b", "#14406b", "#2166AC", "#92C5DE", "#F7F7F7", "#F4A582", "#B2182B", "#700f1b", "#2d060b"))  # RColorBrewer::brewer.pal(n = 9, name = 'RdBu')
metric_lims_s <- c(-1,1) * max(abs(quantile(df_s4t_month$dT.lcc, probs = c(0.025, 0.975), na.rm = T)))  # <--- need to adjust!
metric_label <- 'D_LST'
sp_agr_sub <- df_s4t_month %>%
filter(lon >= bbox['xmin'], lon <= bbox['xmax'],
lat >= bbox['ymin'], lat <= bbox['ymax'])
g_map_2 <- ggplot(sp_agr_sub, aes(x = lon, y = lat)) +
geom_tile(aes(fill = dT.lcc)) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_cartesian(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Mean bias in skin/surface temperature of hottest days in the month',
subtitle = 'Based on all monthly values covering 2003 until 2019. Bias consists of reanalysis (ERA5) minus satellite retrievals (MYD11)')
g_map_2
df_s4t <- data.frame(NULL)
for(iTrans in c('CaGtoEFO', 'CaGtoDFO')){
load(paste0(dpath, '/df_s4t_LST_Day_CMG_',iTrans,'_2003to2019_May.RData'))
df_s4t <- bind_rows(df_s4t,
df_s4t_month %>%
filter(lon >= bbox['xmin'], lon <= bbox['xmax'],
lat >= bbox['ymin'], lat <= bbox['ymax']))
}
head(df_s4t_month)
df_s4t <- data.frame(NULL)
for(iTrans in c('CaGtoEFO', 'CaGtoDFO')){
load(paste0(dpath, '/df_s4t_LST_Day_CMG_',iTrans,'_2003to2019_May.RData'))
df_s4t <- bind_rows(df_s4t,
df_s4t_month %>%
mutate(transition = iTrans) %>%
filter(lon >= bbox['xmin'], lon <= bbox['xmax'],
lat >= bbox['ymin'], lat <= bbox['ymax']))
}
head(df_s4t)
df_s4t_all <- df_s4t %>%
group_by(lat, lon) %>%
summarize(dT.lcc = weighted.mean(dT.lcc, w = 1/dT.lcc.u, na.rm = T))
head(df_s4t_all)
g_map_2 <- ggplot(df_s4t_all, aes(x = lon, y = lat)) +
geom_tile(aes(fill = dT.lcc)) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_cartesian(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Mean bias in skin/surface temperature of hottest days in the month',
subtitle = 'Based on all monthly values covering 2003 until 2019. Bias consists of reanalysis (ERA5) minus satellite retrievals (MYD11)')
g_map_2
load(paste0(dpath, '/df_s4t_LST_Day_CMG_',iTrans,'_2003to2019_Sep.RData'))
dpath <- '../lulcc-bph-chgclim/data/inter_data/df_s4t'
df_s4t <- data.frame(NULL)
for(iTrans in c('CaGtoEFO', 'CaGtoDFO')){
load(paste0(dpath, '/df_s4t_LST_Day_CMG_',iTrans,'_2003to2019_Sep.RData'))
df_s4t <- bind_rows(df_s4t,
df_s4t_month %>%
mutate(transition = iTrans) %>%
filter(lon >= bbox['xmin'], lon <= bbox['xmax'],
lat >= bbox['ymin'], lat <= bbox['ymax']))
}
df_s4t_all <- df_s4t %>%
group_by(lat, lon) %>%
summarize(dT.lcc = weighted.mean(dT.lcc, w = 1/dT.lcc.u, na.rm = T))
metric_colpal <- rev(c("#081a2b", "#14406b", "#2166AC", "#92C5DE", "#F7F7F7", "#F4A582", "#B2182B", "#700f1b", "#2d060b"))  # RColorBrewer::brewer.pal(n = 9, name = 'RdBu')
metric_lims_s <- c(-1,1) * max(abs(quantile(df_s4t_month$dT.lcc, probs = c(0.025, 0.975), na.rm = T)))  # <--- need to adjust!
metric_label <- 'D_LST'
g_map_2 <- ggplot(df_s4t_all, aes(x = lon, y = lat)) +
geom_tile(aes(fill = dT.lcc)) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_cartesian(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Mean bias in skin/surface temperature of hottest days in the month',
subtitle = 'Based on all monthly values covering 2003 until 2019. Bias consists of reanalysis (ERA5) minus satellite retrievals (MYD11)')
g_map_2 <- ggplot(df_s4t_all, aes(x = lon, y = lat)) +
g_map_2 <- ggplot(df_s4t_all, aes(x = lon, y = lat)) +
geom_tile(aes(fill = dT.lcc)) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_cartesian(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Mean bias in skin/surface temperature of hottest days in the month',
subtitle = 'Based on all monthly values covering 2003 until 2019. Bias consists of reanalysis (ERA5) minus satellite retrievals (MYD11)')
g_map_2
month.abb[iMonth]
iMonth <- 'Sep'
month.abb[iMonth]
iMonth <- 1
month.abb[iMonth]
dpath <- '../lulcc-bph-chgclim/data/inter_data/df_s4t'
df_s4t <- data.frame(NULL)
iMonth <- 7
for(iTrans in c('CaGtoEFO', 'CaGtoDFO')){
load(paste0(dpath, '/df_s4t_LST_Day_CMG_',iTrans,'_2003to2019_', month.abb[iMonth],'.RData'))
df_s4t <- bind_rows(df_s4t,
df_s4t_month %>%
mutate(transition = iTrans) %>%
filter(lon >= bbox['xmin'], lon <= bbox['xmax'],
lat >= bbox['ymin'], lat <= bbox['ymax']))
}
df_s4t_all <- df_s4t %>%
group_by(lat, lon) %>%
summarize(dT.lcc = weighted.mean(dT.lcc, w = 1/dT.lcc.u, na.rm = T))
metric_colpal <- rev(c("#081a2b", "#14406b", "#2166AC", "#92C5DE", "#F7F7F7", "#F4A582", "#B2182B", "#700f1b", "#2d060b"))  # RColorBrewer::brewer.pal(n = 9, name = 'RdBu')
metric_lims_s <- c(-1,1) * max(abs(quantile(df_s4t_month$dT.lcc, probs = c(0.025, 0.975), na.rm = T)))  # <--- need to adjust!
metric_label <- 'D_LST'
g_map_2 <- ggplot(df_s4t_all, aes(x = lon, y = lat)) +
geom_tile(aes(fill = dT.lcc)) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_cartesian(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Mean bias in skin/surface temperature of hottest days in the month',
subtitle = 'Based on all monthly values covering 2003 until 2019. Bias consists of reanalysis (ERA5) minus satellite retrievals (MYD11)')
g_map_2
source('~/work/workspace/f4p-era5-analysis/code/mkplots___perVar.R')
source('~/work/workspace/f4p-era5-analysis/code/mkplots___perVar.R')
load( paste0('data/inter_data/df_single_var_agreement/df_single_var_agr_', varname,'.RData'))
source('~/work/workspace/f4p-era5-analysis/code/getmetr___perVar.R')
month.abb[iMonth]
month.abb()
month.abb[iMonth]
month.names[iMonth]
month.name[iMonth]
wmap_df_land <- st_read('data/input_data/world_vectors/ne_50m_land.shp', quiet = T)
wmap_df_land <- st_read('data/input_data/world_vectors/ne_50m_land.shp', quiet = T)
# vctr data
data_path <- '/Volumes/home/work/data/external_datasets/WorldVector/'
file.symlink(to = 'data/input_data/world_vectors', from = data_path)
wmap_df_land <- st_read('data/input_data/world_vectors/ne_50m_land.shp', quiet = T)
wmap_df_ocean <- st_read('data/input_data/world_vectors/ne_50m_ocean.shp', quiet = T)
g_map_2 <- ggplot(df_s4t_all, aes(x = lon, y = lat)) +
geom_sf(data = wmap_df_land, fill='Grey50',colour='Grey50',size=0) +
geom_tile(aes(fill = dT.lcc)) +
geom_sf(data = wmap_df_ocean, fill='Grey20',colour='Grey20',size=0) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_cartesian(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Change in daytime surface temperature following potential afforestation',
subtitle = paste('Mean value for the month of', month.name[iMonth], 'based on all values covering 2003 until 2019'))
g_map_2
wmap_df_land
g_map_2 <- ggplot(df_s4t_all) +
geom_sf(data = wmap_df_land, fill='Grey50',colour='Grey50',size=0) +
geom_tile(aes(x = lon, y = lat, fill = dT.lcc)) +
geom_sf(data = wmap_df_ocean, fill='Grey20',colour='Grey20',size=0) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_cartesian(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Change in daytime surface temperature following potential afforestation',
subtitle = paste('Mean value for the month of', month.name[iMonth], 'based on all values covering 2003 until 2019'))
g_map_2
g_map_2 <- ggplot(df_s4t_all) +
geom_sf(data = wmap_df_land, fill='Grey50',colour='Grey50',size=0) +
geom_tile(aes(x = lon, y = lat, fill = dT.lcc)) +
geom_sf(data = wmap_df_ocean, fill='Grey20',colour='Grey20',size=0) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_sf(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Change in daytime surface temperature following potential afforestation',
subtitle = paste('Mean value for the month of', month.name[iMonth], 'based on all values covering 2003 until 2019'))
g_map_2 <- ggplot(df_s4t_all) +
g_map_2 <- ggplot(df_s4t_all) +
geom_sf(data = wmap_df_land, fill='Grey50',colour='Grey50',size=0) +
geom_tile(aes(x = lon, y = lat, fill = dT.lcc)) +
geom_sf(data = wmap_df_ocean, fill='Grey20',colour='Grey20',size=0) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_sf(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Change in daytime surface temperature following potential afforestation',
subtitle = paste('Mean value for the month of', month.name[iMonth], 'based on all values covering 2003 until 2019'))
g_map_2
g_map_1 <- ggplot(sp_agr_sub) +
geom_sf(data = wmap_df_land, fill='Grey50',colour='Grey50',size=0) +
geom_tile(aes(x = x, y = y, fill = agre$bias)) +
geom_sf(data = wmap_df_ocean, fill='Grey20',colour='Grey20',size=0) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_sf(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Mean bias in skin/surface temperature of hottest days in the month',
subtitle = 'Based on all monthly values covering 2003 until 2019. Bias consists of reanalysis (ERA5) minus satellite retrievals (MYD11)')
g_map_1
dpath <- '../f4p-era5-analysis/data/inter_data/df_single_var_agreement'
dfile <- paste0(dpath, '/df_single_var_agr_LST.RData')
load(dfile, verbose = T)
metric_colpal <- rev(c("#081a2b", "#14406b", "#2166AC", "#92C5DE", "#F7F7F7", "#F4A582", "#B2182B", "#700f1b", "#2d060b"))  # RColorBrewer::brewer.pal(n = 9, name = 'RdBu')
metric_lims_s <- c(-1,1) * max(abs(quantile(sp_agr$agre$bias, probs = c(0.025, 0.975), na.rm = T)))  # <--- need to adjust!
metric_label <- 'Bias'
sp_agr_sub <- sp_agr %>%
filter(x >= bbox['xmin'], x <= bbox['xmax'],
y >= bbox['ymin'], y <= bbox['ymax'])
g_map_1 <- ggplot(sp_agr_sub) +
geom_sf(data = wmap_df_land, fill='Grey50',colour='Grey50',size=0) +
geom_tile(aes(x = x, y = y, fill = agre$bias)) +
geom_sf(data = wmap_df_ocean, fill='Grey20',colour='Grey20',size=0) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_sf(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Mean bias in skin/surface temperature of hottest days in the month',
subtitle = 'Based on all monthly values covering 2003 until 2019. Bias consists of reanalysis (ERA5) minus satellite retrievals (MYD11)')
g_map_1
by_vctr <- c("time", "cz_name")
df_all_comb <- left_join(by = by_vctr, suffix = c("_LAI", "_LST"),
x = df_LAI_comb,
y = df_LST_comb) %>%
select(by_vctr, dif_mu_LAI, dif_sd_LAI, dif_mu_LST, dif_sd_LST) %>%   #
rename(y_mu = dif_mu_LST, y_sd = dif_sd_LST) %>%
mutate(y_mu_std = y_mu/sd(y_mu, na.rm = T),
y_sd_std = y_sd/sd(y_mu, na.rm = T),
y_var = 'LST')
load('data/inter_data/df_single_var_agreement/df_single_var_agr_LAI.RData')
df_LAI_comb <- temp_agr_det
load('data/inter_data/df_single_var_agreement/df_single_var_agr_LST.RData')
df_LST_comb <- temp_agr_det
head(df_LST_comb)
df_all_comb <- left_join(by = by_vctr, suffix = c("_LAI", "_LST"),
x = df_LAI_comb,
y = df_LST_comb) %>%
select(by_vctr, obs_mu_LAI, dif_mu_LST, dif_sd_LST)
head(df_all_comb)
fpath <- 'results/plots4Africa'
dir.create(fpath)
g_map_2 <- ggplot(sp_agr_sub) +
geom_tile(aes(x = x, y = y, fill = agre$bias)) +
geom_sf(data = wmap_df_ocean, fill='Grey20',colour='Grey20',size=0) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_sf(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Mean bias in skin/surface temperature of hottest days in the month',
subtitle = 'Based on all monthly values covering 2003 until 2019. Bias consists of reanalysis (ERA5) minus satellite retrievals (MYD11)')
ggsave(filename = 'Africa_ERA5_bias_LST.png',plot = g_map_2, path = fpath,
width = 10, height = 10)
g_map_1 <- ggplot(df_s4t_all) +
geom_sf(data = wmap_df_land, fill='Grey50',colour='Grey50',size=0) +
geom_tile(aes(x = lon, y = lat, fill = dT.lcc)) +
geom_sf(data = wmap_df_ocean, fill='Grey20',colour='Grey20',size=0) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_sf(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Change in daytime surface temperature following potential afforestation',
subtitle = paste('Mean value for the month of', month.name[iMonth], 'based on all values covering 2003 until 2019'))
ggsave(filename = 'Africa_delta_LST_afforestation.png',plot = g_map_1, path = fpath,
width = 10, height = 10)
metric_label <- 'D_LST'
metric_colpal <- rev(c("#081a2b", "#14406b", "#2166AC", "#92C5DE", "#F7F7F7", "#F4A582", "#B2182B", "#700f1b", "#2d060b"))  # RColorBrewer::brewer.pal(n = 9, name = 'RdBu')
metric_lims_s <- c(-1,1) * max(abs(quantile(df_s4t_month$dT.lcc, probs = c(0.025, 0.975), na.rm = T)))  # <--- need to adjust!
metric_label <- 'D_LST'
g_map_1 <- ggplot(df_s4t_all) +
geom_sf(data = wmap_df_land, fill='Grey50',colour='Grey50',size=0) +
geom_tile(aes(x = lon, y = lat, fill = dT.lcc)) +
geom_sf(data = wmap_df_ocean, fill='Grey20',colour='Grey20',size=0) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_sf(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Change in daytime surface temperature following potential afforestation',
subtitle = paste('Mean value for the month of', month.name[iMonth], 'based on all values covering 2003 until 2019'))
ggsave(filename = 'Africa_delta_LST_afforestation.png',plot = g_map_1, path = fpath,
width = 10, height = 10)

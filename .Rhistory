scale_y_continuous('Latitude') +
coord_cartesian(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Change in daytime surface temperature following potential afforestation',
subtitle = paste('Mean value for the month of', month.name[iMonth], 'based on all values covering 2003 until 2019'))
g_map_2
wmap_df_land
g_map_2 <- ggplot(df_s4t_all) +
geom_sf(data = wmap_df_land, fill='Grey50',colour='Grey50',size=0) +
geom_tile(aes(x = lon, y = lat, fill = dT.lcc)) +
geom_sf(data = wmap_df_ocean, fill='Grey20',colour='Grey20',size=0) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_cartesian(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Change in daytime surface temperature following potential afforestation',
subtitle = paste('Mean value for the month of', month.name[iMonth], 'based on all values covering 2003 until 2019'))
g_map_2
g_map_2 <- ggplot(df_s4t_all) +
geom_sf(data = wmap_df_land, fill='Grey50',colour='Grey50',size=0) +
geom_tile(aes(x = lon, y = lat, fill = dT.lcc)) +
geom_sf(data = wmap_df_ocean, fill='Grey20',colour='Grey20',size=0) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_sf(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Change in daytime surface temperature following potential afforestation',
subtitle = paste('Mean value for the month of', month.name[iMonth], 'based on all values covering 2003 until 2019'))
g_map_2 <- ggplot(df_s4t_all) +
g_map_2 <- ggplot(df_s4t_all) +
geom_sf(data = wmap_df_land, fill='Grey50',colour='Grey50',size=0) +
geom_tile(aes(x = lon, y = lat, fill = dT.lcc)) +
geom_sf(data = wmap_df_ocean, fill='Grey20',colour='Grey20',size=0) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_sf(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Change in daytime surface temperature following potential afforestation',
subtitle = paste('Mean value for the month of', month.name[iMonth], 'based on all values covering 2003 until 2019'))
g_map_2
g_map_1 <- ggplot(sp_agr_sub) +
geom_sf(data = wmap_df_land, fill='Grey50',colour='Grey50',size=0) +
geom_tile(aes(x = x, y = y, fill = agre$bias)) +
geom_sf(data = wmap_df_ocean, fill='Grey20',colour='Grey20',size=0) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_sf(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Mean bias in skin/surface temperature of hottest days in the month',
subtitle = 'Based on all monthly values covering 2003 until 2019. Bias consists of reanalysis (ERA5) minus satellite retrievals (MYD11)')
g_map_1
dpath <- '../f4p-era5-analysis/data/inter_data/df_single_var_agreement'
dfile <- paste0(dpath, '/df_single_var_agr_LST.RData')
load(dfile, verbose = T)
metric_colpal <- rev(c("#081a2b", "#14406b", "#2166AC", "#92C5DE", "#F7F7F7", "#F4A582", "#B2182B", "#700f1b", "#2d060b"))  # RColorBrewer::brewer.pal(n = 9, name = 'RdBu')
metric_lims_s <- c(-1,1) * max(abs(quantile(sp_agr$agre$bias, probs = c(0.025, 0.975), na.rm = T)))  # <--- need to adjust!
metric_label <- 'Bias'
sp_agr_sub <- sp_agr %>%
filter(x >= bbox['xmin'], x <= bbox['xmax'],
y >= bbox['ymin'], y <= bbox['ymax'])
g_map_1 <- ggplot(sp_agr_sub) +
geom_sf(data = wmap_df_land, fill='Grey50',colour='Grey50',size=0) +
geom_tile(aes(x = x, y = y, fill = agre$bias)) +
geom_sf(data = wmap_df_ocean, fill='Grey20',colour='Grey20',size=0) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_sf(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Mean bias in skin/surface temperature of hottest days in the month',
subtitle = 'Based on all monthly values covering 2003 until 2019. Bias consists of reanalysis (ERA5) minus satellite retrievals (MYD11)')
g_map_1
by_vctr <- c("time", "cz_name")
df_all_comb <- left_join(by = by_vctr, suffix = c("_LAI", "_LST"),
x = df_LAI_comb,
y = df_LST_comb) %>%
select(by_vctr, dif_mu_LAI, dif_sd_LAI, dif_mu_LST, dif_sd_LST) %>%   #
rename(y_mu = dif_mu_LST, y_sd = dif_sd_LST) %>%
mutate(y_mu_std = y_mu/sd(y_mu, na.rm = T),
y_sd_std = y_sd/sd(y_mu, na.rm = T),
y_var = 'LST')
load('data/inter_data/df_single_var_agreement/df_single_var_agr_LAI.RData')
df_LAI_comb <- temp_agr_det
load('data/inter_data/df_single_var_agreement/df_single_var_agr_LST.RData')
df_LST_comb <- temp_agr_det
head(df_LST_comb)
df_all_comb <- left_join(by = by_vctr, suffix = c("_LAI", "_LST"),
x = df_LAI_comb,
y = df_LST_comb) %>%
select(by_vctr, obs_mu_LAI, dif_mu_LST, dif_sd_LST)
head(df_all_comb)
fpath <- 'results/plots4Africa'
dir.create(fpath)
g_map_2 <- ggplot(sp_agr_sub) +
geom_tile(aes(x = x, y = y, fill = agre$bias)) +
geom_sf(data = wmap_df_ocean, fill='Grey20',colour='Grey20',size=0) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_sf(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Mean bias in skin/surface temperature of hottest days in the month',
subtitle = 'Based on all monthly values covering 2003 until 2019. Bias consists of reanalysis (ERA5) minus satellite retrievals (MYD11)')
ggsave(filename = 'Africa_ERA5_bias_LST.png',plot = g_map_2, path = fpath,
width = 10, height = 10)
g_map_1 <- ggplot(df_s4t_all) +
geom_sf(data = wmap_df_land, fill='Grey50',colour='Grey50',size=0) +
geom_tile(aes(x = lon, y = lat, fill = dT.lcc)) +
geom_sf(data = wmap_df_ocean, fill='Grey20',colour='Grey20',size=0) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_sf(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Change in daytime surface temperature following potential afforestation',
subtitle = paste('Mean value for the month of', month.name[iMonth], 'based on all values covering 2003 until 2019'))
ggsave(filename = 'Africa_delta_LST_afforestation.png',plot = g_map_1, path = fpath,
width = 10, height = 10)
metric_label <- 'D_LST'
metric_colpal <- rev(c("#081a2b", "#14406b", "#2166AC", "#92C5DE", "#F7F7F7", "#F4A582", "#B2182B", "#700f1b", "#2d060b"))  # RColorBrewer::brewer.pal(n = 9, name = 'RdBu')
metric_lims_s <- c(-1,1) * max(abs(quantile(df_s4t_month$dT.lcc, probs = c(0.025, 0.975), na.rm = T)))  # <--- need to adjust!
metric_label <- 'D_LST'
g_map_1 <- ggplot(df_s4t_all) +
geom_sf(data = wmap_df_land, fill='Grey50',colour='Grey50',size=0) +
geom_tile(aes(x = lon, y = lat, fill = dT.lcc)) +
geom_sf(data = wmap_df_ocean, fill='Grey20',colour='Grey20',size=0) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_sf(expand = F,
xlim = bbox[c('xmin', 'xmax')],
ylim = bbox[c('ymin', 'ymax')]) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle(label = 'Change in daytime surface temperature following potential afforestation',
subtitle = paste('Mean value for the month of', month.name[iMonth], 'based on all values covering 2003 until 2019'))
ggsave(filename = 'Africa_delta_LST_afforestation.png',plot = g_map_1, path = fpath,
width = 10, height = 10)
varname <- 'albedo_bsa_vis'
source('~/work/workspace/f4p-era5-analysis/code/mkplots___perVar.R')
source('~/work/workspace/f4p-era5-analysis/code/mkplots___perVar.R')
varname <- 'albedo_wsa_nir'
head(varname)
load(paste0('data/inter_data/df_comb_obs_vs_sim/df_comb___', varname,'.RData'))  # <--- df_comb
library(dplyr)
library(tidyr)
library(here)
head(df_comb)
# agreement in time (per climzone)
load('data/inter_data/ancillary_info/df_KG_climatezones.RData')  # <---- df_cz
df_cz <- df_cz %>% mutate(cz_major_zone = substr(cz_name, 1, 1)) %>%
select(-cz_ID, -cz_colours)
head(df_cz)
ggplot(df_cz, aes(x = x, y =y, fill = cz_name)) + geom_tile
ggplot(df_cz, aes(x = x, y =y, fill = cz_name)) + geom_tile()
ggplot(df_cz, aes(x = x, y =y, fill = cz_major_zone)) + geom_tile
ggplot(df_cz, aes(x = x, y =y, fill = cz_major_zone)) + geom_tile()
lgd
df_lgd
letter[1:4]
LETTERS[1:4]
dum <- df_cz %>% filter(cz_major_zone %in% LETTERS[1:4])
ggplot(dum, aes(x = x, y =y, fill = cz_major_zone)) + geom_tile()
df_comb_filter <- df_comb %>%
right_join(y = df_cz %>% filter(cz_major_zone %in% LETTERS[1:4]),
by = c('x', 'y'))
dum <- df_comb_filter %>% filter(year == 2005, month == 6)
ggplot(dum, aes(x = x, y =y, fill = obs)) + geom_tile()
head(dum)
## get the necessary monthly anomalies ----
df_anom_path <- '../lulcc-bph-chgclim/data/inter_data/df_anomalies'
df_anom_path
binVarX <- 't2'
binVarY <- 'sm'
list_var <- list(t2 = list(var_name = 't2', var_tag = 't2_ERA5l_025',
bin.width = 1,  bin.min = -10, bin.max = 30),
sm = list(var_name = 'sm', var_tag = 'sm_ERA5l_025',
bin.width = 0.01,  bin.min = 0.1, bin.max = 0.5),
et = list(var_name = 'et', var_tag = 'et_GLEAM_025',
bin.width = 5, bin.min = -15, bin.max = 150),
al = list(var_name = 'al', var_tag = 'al_MODIS_025',
bin.width = 0.01, bin.min = 0.02, bin.max = 0.36))
detVarX <- list_var[binVarX][[binVarX]]
detVarY <- list_var[binVarY][[binVarY]]
detVarX
detVarY
df_binVarX_filename <- paste0(df_anom_path, '/df_anom_', yrRangeL, '_',
detVarX$var_tag,'.RData')
yrRangeL <- '2003to2019'
df_binVarX_filename <- paste0(df_anom_path, '/df_anom_', yrRangeL, '_',
detVarX$var_tag,'.RData')
df_binVarX_filename
load(df_binVarX_filename); df_binVarX_anomalies <- df_anomalies
head(df_binVarX_anomalies)
df_comb
head(df_binVarX_anomalies)
head(df_comb)
head(df_anomalies)
df_anomalies %>% filter(month == 1, lat == 83.375, lon == -37.875)
df_binVarX_anomalies <- df_anomalies %>%
filter(year == 2019) %>%
select(month, lat, lon, clim)
head(df_binVarX_anomalies)
df_binVarX_anomalies %>% rename(x = lon, y = lat)
df_binVarY_filename <- paste0(df_anom_path, '/df_anom_', yrRangeL, '_',
detVarY$var_tag, '.RData')
load(df_binVarY_filename);
df_binVarY_anomalies <- df_anomalies %>%
filter(year == 2019) %>%
select(month, lat, lon, clim) %>%
rename(x = lon, y = lat)
# make bin labels
x.bin.numlbls <- seq(detVarX$bin.min, detVarX$bin.max, detVarX$bin.width)
y.bin.numlbls <- seq(detVarY$bin.min, detVarY$bin.max, detVarY$bin.width)
# make bin breaks
x.bin.breaks <- c(x.bin.numlbls - (detVarX$bin.width/2), Inf)
y.bin.breaks <- c(y.bin.numlbls - (detVarY$bin.width/2), Inf)
x.bin.numlbls
y.bin.numlbls
x.bin.breaks
y.bin.breaks
df_comb
df_comb
head(df_comb)
df_comb <- df_comb %>%
mutate(monthS = ifelse(sign(y) < 0, (month + 6) %% 12, month))  %>%
mutate(monthS = ifelse(monthS == 0, 12, monthS))  %>%
mutate(time = as.Date(x = paste(year, monthS, '15', sep = '-'))) %>%
left_join(df_cz, by = c('x', 'y'))
df_path <- 'data/input_data/era5_df'
df_path <- '../lulcc-bph-chgclim/data/input_data/era5_df'
yrRange
yrRange <- 2003:2019
df_path
load('../lulcc-bph-chgclim/data/input_data/era5_df/df_T2M_ERA5l_025_2003.RData')
x.bin.breaks
binVarX <- 't2'
binVarY <- 'sm'
getclim <- function(var2process){
## get the T2M data (from dataframes) ----
if(var2process == 't2'){
df_all <- data.frame()
for(iYear in yrRange){
fname <- paste0(df_path, '/df_T2M_ERA5l_025_', iYear, '.RData')
load(file = fname) # <-- 'df'
df_sel <- df %>%
rename(var_value = t2m) %>%
mutate(var_value = var_value - 273.15,
lat = round(y, digits = 3),
lon = round(x, digits = 3)) %>%
# filter(lon >= reg_ext@xmin, lon <= reg_ext@xmax,
#        lat >= reg_ext@ymin, lat <= reg_ext@ymax) %>%
dplyr::select(-x, -y)
df_all <- bind_rows(df_all, df_sel)
}
}
## get the SM data (from dataframes) ----
if(var2process == 'sm'){
df_all <- data.frame()
for(iYear in yrRange){
fname <- paste0(df_path, '/df_SM_ERA5l_025_', iYear, '.RData')
load(file = fname) # <-- 'df'
df_sel <- df %>%
rename(var_value = swvl1) %>%
mutate(lat = round(y, digits = 3),
lon = round(x, digits = 3)) %>%
# filter(lon >= reg_ext@xmin, lon <= reg_ext@xmax,
#        lat >= reg_ext@ymin, lat <= reg_ext@ymax) %>%
dplyr::select(-x, -y,)
df_all <- bind_rows(df_all, df_sel)
}
}
# get mean
df_mean <- df_all %>%
group_by(lon, lat) %>%
summarize(clim_val = mean(var_value), .groups = 'keep') %>%
mutate(clim_var = var2process)
return(df_mean)
}
df_clim_VarX <- getclim(binVarX)
head(df_clim_VarX)
fname <- paste0('df_climspace_', binVarX, 'x', binVarY, '.RData/')
fname
fname <- paste0('df_climspace_', binVarX, 'x', binVarY, '.RData')
fpath <- 'data/inter_data/ancillary_info'
fpath
paste0(fpath, '/', fname)
source('~/work/workspace/f4p-era5-analysis/code/mkplots___perVar.R')
source('~/work/workspace/f4p-era5-analysis/code/mkplots___perVar.R')
varname <- 'albedo_bsa_nir'
load( paste0('data/inter_data/df_single_var_agreement/df_single_var_agr_', varname,'.RData'))
colnames(agr) <- paste0("agre$", colnames(agr))
makeplot <- function(metric){
if(metric == 'IoAg'){
metric_code <- 'agre$L'
metric_label <- 'L'
metric_colpal <- viridisLite::viridis(n = 9, option = "A")
metric_lims_s <- c(0,1) -> metric_lims_t
metric_longname <- 'index of agreement (Duveiller et al. 2016)'}
if(metric == 'IoAu'){
metric_code <- 'agre$L.unsys'
metric_label <- 'L_u'
metric_colpal <- viridisLite::viridis(n = 9, option = "A")
metric_lims_s <- c(0,1) -> metric_lims_t
metric_longname <- 'unsystematic index of agreement (Duveiller et al. 2016)'}
if(metric == 'Fsys'){
metric_code <- 'agre$f.sys'
metric_label <- 'Fsys'
metric_colpal <- viridisLite::viridis(n = 9, option = "D")
metric_lims_s <- c(0,1) -> metric_lims_t
metric_longname <- 'fraction of systematic agreement (Duveiller et al. 2016)'}
if(metric == 'Corr'){
metric_code <- 'agre$r'
metric_label <- 'rho'
metric_colpal <- rev(c("#081a2b", "#14406b", "#2166AC", "#92C5DE", "#F7F7F7", "#F4A582", "#B2182B", "#700f1b", "#2d060b"))  # RColorBrewer::brewer.pal(n = 9, name = 'RdBu')
metric_lims_s <- c(-1,1) -> metric_lims_t
metric_longname <- 'Pearson correlation coefficient'}
if(metric == 'RMSD'){
metric_code <- 'agre$rmsd'
metric_label <- 'RMSD'
metric_colpal <- viridisLite::viridis(n = 9, option = "C")  # RColorBrewer::brewer.pal(n = 9, name = 'RdBu')
metric_lims_s <- quantile(sp_agr$agre$rmsd, probs = c(0.025, 0.975), na.rm = T) # <--- need to adjust!
metric_lims_t <- quantile(temp_agr_gen$agre$rmsd, probs = c(0, 1), na.rm = T)  # <--- need to adjust!
metric_longname <- 'root mean square deviation'}
if(metric == 'Bias'){
metric_code <- 'agre$bias'
metric_label <- 'B'
metric_colpal <- rev(c("#081a2b", "#14406b", "#2166AC", "#92C5DE", "#F7F7F7", "#F4A582", "#B2182B", "#700f1b", "#2d060b"))  # RColorBrewer::brewer.pal(n = 9, name = 'RdBu')
metric_lims_s <- c(-1,1) * max(abs(quantile(sp_agr$agre$bias, probs = c(0.025, 0.975), na.rm = T)))  # <--- need to adjust!
metric_lims_t <- c(-1,1) * max(abs(quantile(temp_agr_gen$agre$bias, probs = c(0, 1), na.rm = T)))  # <--- need to adjust!
metric_longname <- 'bias'}
heatmap_cols <- c("#FFFFFF", viridis::inferno(9, direction = -1))
datarange <- c(min(min(freq$obs_val), min(freq$sim_val)),
max(max(freq$obs_val), max(freq$sim_val)))
g_b2d <- ggplot(freq %>% filter(freq > 0)) +
geom_tile(aes(x = obs_val, y = sim_val, fill = freq)) +
geom_abline(colour = 'grey50') +
scale_fill_gradientn(colours = heatmap_cols,
limits = c(0,100000), oob = squish, guide = NULL) +
scale_x_continuous('Observations derived from satellite') +
scale_y_continuous('Values derived from ERA5') +
coord_fixed(xlim = datarange, ylim = datarange, expand = F) +
ggtitle(paste('Overall metric value across dataset:',
signif(agr[,which(colnames(agr) == metric_code)], digits = 3)))
g_map <- ggplot(sp_agr, aes(x = x, y = y)) +
geom_tile(aes_string(fill = metric_code)) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_cartesian(expand = F, xlim = c(-180, 180), ylim = c(-90, 90)) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle('Temporal agreement represented in space')
g_tmp <- ggplot(temp_agr_gen %>% filter(cz_major_zone != 'O'),
aes(x = time, colour = cz_major_zone)) +
geom_line(aes_string(y = metric_code)) +
scale_colour_manual('Koppen-Geiger general climate zones: ',
values = c('A'="#960000", 'B'="#FFCC00", 'C'="#00AA00", 'D'="#6E28B4", 'E'="#6496FF"),
labels = c('A'="Tropical", 'B'="Arid", 'C'="Temperate", 'D'="Continental", 'E'="Polar")) +
scale_y_continuous(metric_label, limits = metric_lims_t) +
scale_x_date('', expand = c(0,0), date_breaks = "2 year") +
theme(legend.position = 'bottom',
legend.box.spacing = unit(-0.6,"cm"), #legend.box.margin = margin(0, 6, 1, 6),
legend.direction = "horizontal") +
ggtitle('Time series of the spatial agreement within climate zones')
g_all <- (g_b2d + g_map) / g_tmp +
plot_layout(heights = c(2, 1)) +
plot_annotation(title = paste('Agreement analysis for', varname, 'based on the', metric_longname))
fig.name <- paste0('genplot_', varname, '_', metric, '.', fig.format)
ggsave(filename = fig.name, plot = g_all, path = fig.path, width = 16, height = 9)
}
metric <- 'IoAg'
g_map <- ggplot(sp_agr, aes(x = x, y = y)) +
geom_tile(aes_string(fill = metric_code)) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_cartesian(expand = F, xlim = c(-180, 180), ylim = c(-90, 90)) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle('Temporal agreement represented in space')
metric_code
if(metric == 'IoAg'){
metric_code <- 'agre$L'
metric_label <- 'L'
metric_colpal <- viridisLite::viridis(n = 9, option = "A")
metric_lims_s <- c(0,1) -> metric_lims_t
metric_longname <- 'index of agreement (Duveiller et al. 2016)'}
if(metric == 'IoAu'){
metric_code <- 'agre$L.unsys'
metric_label <- 'L_u'
metric_colpal <- viridisLite::viridis(n = 9, option = "A")
metric_lims_s <- c(0,1) -> metric_lims_t
metric_longname <- 'unsystematic index of agreement (Duveiller et al. 2016)'}
if(metric == 'Fsys'){
metric_code <- 'agre$f.sys'
metric_label <- 'Fsys'
metric_colpal <- viridisLite::viridis(n = 9, option = "D")
metric_lims_s <- c(0,1) -> metric_lims_t
metric_longname <- 'fraction of systematic agreement (Duveiller et al. 2016)'}
if(metric == 'Corr'){
metric_code <- 'agre$r'
metric_label <- 'rho'
metric_colpal <- rev(c("#081a2b", "#14406b", "#2166AC", "#92C5DE", "#F7F7F7", "#F4A582", "#B2182B", "#700f1b", "#2d060b"))  # RColorBrewer::brewer.pal(n = 9, name = 'RdBu')
metric_lims_s <- c(-1,1) -> metric_lims_t
metric_longname <- 'Pearson correlation coefficient'}
if(metric == 'RMSD'){
metric_code <- 'agre$rmsd'
metric_label <- 'RMSD'
metric_colpal <- viridisLite::viridis(n = 9, option = "C")  # RColorBrewer::brewer.pal(n = 9, name = 'RdBu')
metric_lims_s <- quantile(sp_agr$agre$rmsd, probs = c(0.025, 0.975), na.rm = T) # <--- need to adjust!
metric_lims_t <- quantile(temp_agr_gen$agre$rmsd, probs = c(0, 1), na.rm = T)  # <--- need to adjust!
metric_longname <- 'root mean square deviation'}
if(metric == 'Bias'){
metric_code <- 'agre$bias'
metric_label <- 'B'
metric_colpal <- rev(c("#081a2b", "#14406b", "#2166AC", "#92C5DE", "#F7F7F7", "#F4A582", "#B2182B", "#700f1b", "#2d060b"))  # RColorBrewer::brewer.pal(n = 9, name = 'RdBu')
metric_lims_s <- c(-1,1) * max(abs(quantile(sp_agr$agre$bias, probs = c(0.025, 0.975), na.rm = T)))  # <--- need to adjust!
metric_lims_t <- c(-1,1) * max(abs(quantile(temp_agr_gen$agre$bias, probs = c(0, 1), na.rm = T)))  # <--- need to adjust!
metric_longname <- 'bias'}
g_map <- ggplot(sp_agr, aes(x = x, y = y)) +
geom_tile(aes_string(fill = metric_code)) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_cartesian(expand = F, xlim = c(-180, 180), ylim = c(-90, 90)) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle('Temporal agreement represented in space')
g_map
g_map <- ggplot(sp_agr, aes(x = x, y = y)) +
geom_tile(aes_string(fill = metric_code)) +
scale_fill_gradientn(metric_label, colours = metric_colpal,
limits = metric_lims_s, oob = squish) +
scale_x_continuous('Longitude') +
scale_y_continuous('Latitude') +
coord_cartesian(expand = F) + #, xlim = c(-180, 180), ylim = c(-90, 90)) +
theme(legend.position = "right",
legend.key.height = unit(1.8, 'cm'),
panel.background = element_rect(fill = 'grey30'),
panel.grid = element_line(colour = 'grey40')) +
ggtitle('Temporal agreement represented in space')
g_map
head(sp_agr)
min(sp_agr$y)
max(sp_agr$y)
min(sp_agr$x)
max(sp_agr$x)
source('~/work/workspace/f4p-era5-analysis/code/mkplots___perVar.R')
